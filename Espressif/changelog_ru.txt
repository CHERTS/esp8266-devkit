Список изменений:
-----------------

v2.0.9 (20.11.2015):
* Обновлена SDK до версии 1.4.1 Pre5 (папка ESP8266_SDK);
* Обновлена RTOS SDK до версии 1.3.0 (папка ESP8266_RTOS_SDK);
* Обновлена Espressif MESH SDK (beta) (папка ESP8266_MESH_SDK);
* SDK версии 1.3.0 перенесена в папку ESP8266_SDK_130;
* Обновлена документация:
  - Удалены файлы:
    2A-ESP8266__IOT_SDK_User_Manual__EN_v1.3.0.pdf
    2C-ESP8266__SDK__Programming Guide__EN_v1.3.0.pdf
    20A-ESP8266__RTOS_SDK__Programming Guide__EN_v1.0.5.pdf
  + Добавлены файлы:
    2A-ESP8266__IOT_SDK_User_Manual__EN_v1.4.pdf
    2C-ESP8266__SDK__Programming Guide__EN_v1.4.pdf
    3A_ESP8266_Flash_tool_user_manual_EN_v1.0.pdf
    20A-ESP8266__RTOS_SDK__Programming Guide__EN_v1.3.0.pdf
    20B-ESP8266__RTOS_SDK_API Reference__v1.3.0.pdf
* Обновлены примеры:
  sysinfo;
  esp_mesh_sdk_app_controller;
  esp_mesh_sdk_app_light;
  esp_mesh_sdk_app_switch;
  esp_rtos_sdk_example;
  esp_rtos_sdk_example_2;
  nodemcu-firmware;
  at;
  lwip_open_demo_app;
  dht22_thingspeak;
+ Добавлены примеры:
  rboot;
  SPI_slave;
  I2S_Demo;
  PWM_Demo;
  UART_TCP_Passthrough_Demo;

v2.0.8 (01.09.2015):
+ Добавлена Espressif MESH SDK (beta) (папка ESP8266_MESH_SDK);
* Обновлена SDK до версии 1.3.0 (папка ESP8266_SDK);
* SDK версии 1.2.0 перенесена в папку ESP8266_SDK_120;
* SDRAM Optimization Patch for SDK_v1.2.0 (папка "ESP8266_SDK");
* Обновлена RTOS SDK до версии 1.1.0 от 21.08.2015 (папка "ESP8266_RTOS_SDK");
* Обновлены Makefile во всех примерах, добавлена опция USEMEMANALYZER, BAUD, SPI_SIZE_MAP;
* Обновлена утилита "utils\esptool.exe" (Спасибо pvvx);
* Обновлена утилита "utils\esptool-ck.exe" до версии 0.4.6-1;
* Обновлена документация:
  - Удалены файлы:
    2A-ESP8266__IOT_SDK_User_Manual__EN_v1.1.0.pdf
    2C-ESP8266__SDK__Programming Guide__EN_v1.2.0.pdf
    4A-ESP8266__AT Instruction Set__EN_v0.30.pdf
    4B-ESP8266__AT Command Examples__EN_v0.5.pdf
  + Добавлены файлы:
    2A-ESP8266__IOT_SDK_User_Manual__EN_v1.3.0.pdf
    2C-ESP8266__SDK__Programming Guide__EN_v1.3.0.pdf
    4A-ESP8266__AT Instruction Set__EN_v0.40.pdf
    4B-ESP8266__AT Command Examples__EN_v0.6.pdf
    5A-ESP8266__SDK__SSL_User_Manual__EN_v1.1.pdf
    20A-ESP8266__RTOS_SDK__Programming Guide__EN_v1.0.5.pdf
    9B-ESP8266__Sleep__Function Description__EN_v1.0.pdf
    30A_ESP8266__Mesh_User Guide__EN_v1.0.pdf
* Обновлены примеры:
  nodemcu-firmware;
  esphttpd;
  esp_mqtt;
- Удалены примеры;
  hello_world_cpp_irom;
  lwip_lib;
+ Добавлены примеры:
  esp_rtos_sdk_example_2;
  lwip_open_demo_app;
  esp_mesh_sdk_app_controller;
  esp_mesh_sdk_app_light;
  esp_mesh_sdk_app_switch;

v2.0.7 (09.07.2015):
* Обновлен компилятор xtensa-lx106-gcc и xtensa-lx106-g++ до версии 5.1 (Огромное спасибо jcmvbkbc);
  ВНИМАНИЕ! Для корректной сборки ваших прошивок вы должны добавить опцию -std=gnu90 в директиву CFLAGS в Makefile
* Обновлена SDK до версии 1.2.0 + Patch for SSL based on SDK_v1.2.0 + Patch for SmartConfig based on SDK_v1.2.0 (папка ESP8266_SDK);
* Обновлена RTOS SDK, каталог "ESP8266_RTOS_SDK";
* Обновлена утилита "utils\esptool-ck.exe" до версии 0.4.5-1;
* Обновлена документация:
  - Удалены файлы:
    2C-ESP8266__SDK__Programming Guide__EN_v1.1.1.pdf
    4A-ESP8266__AT Instruction Set__EN_v0.24.pdf
    4B-ESP8266__AT Command Examples__EN_v0.4.pdf
  + Добавлены файлы:
    2C-ESP8266__SDK__Programming Guide__EN_v1.2.0.pdf
    4A-ESP8266__AT Instruction Set__EN_v0.30.pdf
    4B-ESP8266__AT Command Examples__EN_v0.5.pdf
    SSL\ESP8266__SDK__SSL_User_Manual__EN_v1.0.pdf
  * Обновлены файлы:
    4B-ESP8266__AT Command Examples__EN_v0.4.pdf
    2A-ESP8266__IOT_SDK_User_Manual__EN_v1.1.0.pdf
    2B-ESP8266__SDK__IOT_Demo__EN_v0.6.pdf
* Обновлены примеры:
  i2c_bmp180;
  nodemcu-firmware;
- Удалены примеры;
  hello_world_optimized;
  ESPWebFramework;

v2.0.6 (10.06.2015):
* Обновлена SDK до версии 1.1.1 (папка ESP8266_SDK);
* SDK версии 1.1.0 перенесена в папку ESP8266_SDK_110;
* SDK версии 1.0.1 перенесена в папку ESP8266_SDK_101;
* Обновлена утилита "utils\esptool-ck.exe" до версии 0.4.5;
* Обновлена утилита "utils\esptool.exe";
  - Добавлено отображение скорости записи во flash;
  - Добавлена опция '--entry-symbol' для переопределения точки входа;
  - Исправлен неправильный размер стирания области для записи (Спасибо pvvx);
  - Исправлено создание лишних сегментов для загрузчика, если данные в rodata и т.д. отсутствуют (Спасибо pvvx);
* Обновлена документация:
  - Удалены файлы:
    2C-ESP8266__SDK__Programming Guide__EN_v1.0.1.pdf
  + Добавлены файлы:
    2C-ESP8266__SDK__Programming Guide__EN_v1.1.1.pdf
* Обновлены примеры:
  ESPWebFramework;
  dht22_thingspeak;
  esphttpd;

v2.0.5 (22.05.2015):
+ Добавлен режим командной строки.
  В данном режиме открывается консоль cmd с прописанными переменными среды для компиляции проектов из командной строки.
  Для запуска командной строки в меню Пуск -> Espressif запустите "Командная строка Unofficial Development Kit for Espressif ESP8266"
  или запустите "C:\Espressif\utils\console.bat", далее перейдите в каталог c нужным примером, например cd hello_world
  и наберите make - должна скомпилироваться прошивка, далее make flash - прошивка будет прошита.
* Обновлена утилита "utils\esptool.exe";
* Обновлена утилита "utils\esptool-ck.exe" до версии 0.4.4:
  + добавлена поддержка flash размером 8M, 16M, 32M;
  * исправлены проблема при загрузке через переходник USB-to-RS232 на CH340;
* Обновлена RTOS SDK, каталог "ESP8266_RTOS_SDK";
* Обновлена документация:
  + Добавлены файлы:
    0A-ESP8266__WiFi_Specifications__EN_v4.2.pdf
    0B-ESP8266__Hardware_User_Guide__EN_v0.7.pdf
    0D-ESP8266__Pin_List_v0.1.xls
    8B-ESP8266__Interface__GPIO_Registers_v0.1.xls
    8F-ESP8266__Interface__UART_Registers_v0.1.xls
    99A-ESP8266__Flash_RW_Operation__EN_v0.2.pdf
    99C-ESP8266__OTA_Upgrade__EN_v1.5.pdf
* Обновлены примеры:
  nodemcu-firmware;
  sysinfo;

v2.0.4 (09.05.2015):
+ Добавлена официальная AT прошивка от Espressif, каталог "ESP8266_SDK\bin\at";
* Обновлен компилятор xtensa-lx106-gcc и xtensa-lx106-g++
  Изменены опции сборки newlib, как следствие в прошивках увеличилось количество свободной IRAM.
  Например в примере "examples\nodemcu-firmware\" на старом компиляторе Free IRam было 810 Байт, на новом Free IRam стало 2986 Байт (при отключеном LUA_USE_BUILTIN_MATH).
* Обновлена утилита "utils\esptool-ck.exe" до версии 0.4.3;
* Обновлена утилита "utils\esptool.exe";
* Обновлена библиотека "libnet80211.a" и заголовочный файл "user_interface.h" из Espressif SDK 1.0.1;
* Обновлена RTOS SDK, каталог "ESP8266_RTOS_SDK";
* Обновлена документация:
  - Удалены файлы:
    ESP8266_IOT_Flash_read_write_guide_v0.2.pdf
    ESP8266_IoT_SDK_Programming Guide_v1.0.1.pdf
  + Добавлены файлы:
    2A-ESP8266__IOT_SDK_User_Manual__EN_v1.0.1.pdf
    2B-ESP8266__SDK__IOT_Demo__EN_v0.5.pdf
    2C-ESP8266__SDK__Programming Guide__EN_v1.0.1.pdf
    4A-ESP8266__AT Instrction Set__EN_v0.23.pdf
    4B-ESP8266__AT Command Examples__EN_v0.4.pdf
* Обновлены примеры:
  ESPWebFramework;
  esp_mqtt;
  nodemcu-firmware;
  esphttpd;
  ESP8266_Relay_Board;
  esp8266_ili9341;
  lwip_lib;

v2.0.3 (27.04.2015):
+ Добавлены новые примеры:
  esp8266-ir-remote - Infrared remote control library for ESP8266 RTOS SDK (компилируется, работа не проверялась), оригинальные исходники https://github.com/valkuc/esp8266-ir-remote;
  hello_world_optimized - Оптимизация скорости и размера доступного IRAM (Спасибо pvvx);
* Обновлена SDK до версии 1.0.1 (папка ESP8266_SDK);
* Обновлены примеры:
  nodemcu-firmware;
  ESP8266_Relay_Board;
  ESPWebFramework;

v2.0.2 (05.04.2015):
* Обновлена SDK до версии 1.0.1 b1 (папка ESP8266_SDK);
* Обновлена RTOS SDK, каталог "ESP8266_RTOS_SDK";
* Обновлена утилита "utils\esptool-ck.exe";
* Обновлены Makefile во всех примерах. В Makefile добавлена опция указания скорости порта для утилиты esptool.exe;
* Обновлены примеры:
  esphttpd;
  ESP8266_Relay_Board;
  esp_rtos_sdk_example;
  i2c_bmp180;
  ESPWebFramework;

v2.0.1 (30.03.2015):
* Библиотеки из папка ESP8266_SDK\lib обновлены до версии 1.0.0;
* Обновлена утилита "utils\esptool-ck.exe";
* Обновлены примеры:
  ESPWebFramework;
  dht22_thingspeak;
  i2c_bmp180;

v2.0.0 (26.03.2015):
+ Добавлены новые примеры:
  hello_world_cpp_irom - Пример прошивки на С++ с модифицированным Makefile и скриптом линковщика eagle.app.v6.cpp.irom.ld. В данном примере все функции и методы по-умолчанию идут в irom, и только помеченные ICACHE_IRAM_ATTR - идут в iram (Автор: Sermus);
  ESP8266_Relay_Board - Проект "Three Channel WiFi Relay/Thermostat Board", (компилируется, проверен в работе), оригинальные исходники https://github.com/mharizanov/ESP8266_Relay_Board;
+ Добавлены новые утилиты:
  "utils\MemAnalyzer.exe" - CLI утилита для удобного вывода информации по распределению памяти между секциями прошивки, её можно использовать в Makefile (см. пример hello_world_cpp_irom), для анализа используется утилита xtensa-lx106-elf-objdump.exe (исходники https://github.com/Sermus/ESP8266_memory_analyzer);
* Обновлена SDK до версии 1.0.0 (папка ESP8266_SDK);
* Старая версия SDK 0.9.5 перенесена в папку ESP8266_SDK_095, она необходима для сборки прошивки "examples\nodemcu-firmware";
* Все сторонние библиотеки, заголовочные файлы (lwip и др.) и дополнительные скрипты линковщика (eagle.app.v6.cpp.ld, eagle.app.v6.cpp.irom.ld и др.) перенесены в каталог C:\Espressif\extra;
* Обновлена документация, добавлен файл "docs\ESP8266_IoT_SDK_Programming Guide_v1.0.0.pdf";
* Обновлены все примеры. В Makefile добавлены опции для утилиты esptool.exe, теперь можно прошивать плат ESP c различными чипами flash-памяти.
* Обновлен инсталлятор, в процессе установки можно выбирать компоненты для установки: компилятор, SDK, утилиты, примеры, документация.

v1.0.12 (18.03.2015):
+ Добавлены новые примеры:
  at - Пример использования библиотеки libat от Espressif (компилируется, проверен в работе);
  smart_config - Пример использования библиотеки libsmartconfig от Espressif (компилируется, проверен в работе);
  gpio16_key - Драйвер GPIO и пример его использования - 2 кнопки (компилируется, проверен в работе), оригинальные исходники https://github.com/CHERTS/esp8266-gpio16;
  gpio16_led - Драйвер GPIO и пример его использования - 1 кнопка и 1 светодиод (компилируется, проверен в работе);
  gpio16_dht22 - Пример чтения данных с сенсора DHT22 (компилируется, проверен в работе), оригинальные исходники https://github.com/CHERTS/esp8266-dht11_22;
* Обновлена документация, добавлен файл "docs\ESP8266_IoT_SDK_Programming Guide_v0.9.5.pdf";
* Обновлена утилита "utils\esptool-ck.exe";
* Обновлены примеры:
  esp8266_ili9341;
  esp8266_pcd8544;
  ESPWebFramework;
  esp_mqtt;
  nodemcu-firmware;
  esphttpd;
- Удалены примеры:
  dht22;
  dht11_22;

v1.0.11 (25.02.2015):
+ Добавлен RTOS SDK, каталог "C:\Espressif\ESP8266_RTOS_SDK";
+ Добавлены новые примеры:
  ESPWebFramework - Пример, показывающий работу с RTOS SDK на языке С++ (компилируется, проверен в работе), оригинальные исходники https://github.com/fdivitto/ESPWebFramework;
  esp_rtos_sdk_example - Базовый пример работы с RTOS SDK от Espressif (компилируется, работа не проверялась);
- Удален пример esp_iot_rtos_sdk;
* Обновлен компилятор xtensa-lx106-gcc;
* Обновлена утилита "utils\esptool.exe";
* Обновлены примеры:
  nodemcu-firmware;
  esp_mqtt;
  esphttpd;
  esp8266_pcd8544;
  hello_world - для записи прошивки используется утилита utils\esptool-ck.exe;

v1.0.10 (16.02.2015):
+ Добавлены новые примеры:
  esp_mqtt - Пример работы с библиотекой, реализующей протокол MQTT (компилируется, проверен в работе), оригинальные исходники https://github.com/tuanpmt/esp_mqtt;
  lwip_lib - Модификация TCP/IP стека LWIP для ESP8266 от kadamski, оригинальные исходники https://github.com/kadamski/esp-lwip;
* Обновлена утилита "utils\esptool-ck.exe";
* Обновлены примеры:
  nodemcu-firmware;
  esp8266_pcd8544;
  esp8266_ili9341;
  esp_iot_rtos_sdk;

v1.0.9 (06.02.2015):
* Обновлена утилита "utils\esptool.exe":
  - исправлена проблема с поиском утилит *nm и *objcopy в режиме elf2image;
* Обновлены примеры:
  nodemcu-firmware;
  esphttpd;
  esp8266_pcd8544;

v1.0.8 (03.02.2015):
+ Добавлены новые примеры:
  esp8266_ili9341 - Пример работы с SPI LCD на основе дисплея ILI9341, оригинальные исходники https://github.com/Perfer/esp8266_ili9341;
* Обновлен инсталлятор;
* Обновлена утилита "utils\esptool.exe":
  - добавлена поддержка чтения и стирания SPI Flash;
  - исправлены мелкие ошибки;
* Обновлена утилита "utils\esptool-ck.exe";
* Обновлена библиотека "ESP8266_SDK\lib\libsmartconfig.a" и "ESP8266_SDK\lib\libmain.a";
* Обновлены примеры:
  nodemcu-firmware;
  esphttpd;

v1.0.7 (27.01.2015):
+ Добавлен компилятор xtensa-lx106-g++;
+ Добавлены новые примеры:
  dht22_thingspeak - Пример работы с сенсором DHT22 (температура и влажность) и отправки данных на сервис thingspeak.com (компилируется, проверен в работе);
  hello_world_cpp и hello_world_cpp_2  - Примеры написания прошивки на C++ (компилируется, проверен в работе);
* Обновлен компилятор xtensa-lx106-gcc;
* Обновлена SDK до версии 0.9.5 (папка ESP8266_SDK);
* Старая версия SDK 0.9.4 перенесена в папку ESP8266_SDK_094, она необходима для сборки прошивки "examples\at_v0.20_on_SDKv0.9.4";
* Обновлена документация, добавлен файл "docs\ESP8266_IoT_SDK_Programming Guide_v0.9.5.pdf";
* Обновлены все примеры в папке examples, в большинстве примеров в Makefile появились параметры (BOOT,APP,SPI_SPEED,SPI_MODE,SPI_SIZE) для настройки системы сборки прошивок,
  так же появились новые цели сборки:
  - цель "all" - с помощью неё можно собрать файлы прошивки в зависимости от установленных параметров (BOOT,APP,SPI_SPEED,SPI_MODE,SPI_SIZE);
  - цель "flashonefile" - с помощью неё можно собрать единый файл прошивки и прошить во flash по адресу 0x000000, параметры BOOT,APP,SPI_SPEED,SPI_MODE,SPI_SIZE не влияют на данную сборку;
  - цель "flashboot" - с помощью неё можно прошить загрузчик v1.1 или v1.2;
  - цель "flashinit" - с помощью неё можно прошить файлы esp_init_data_default.bin и blank.bin;
* Утилита C:\Espressif\xtensa-lx106-elf\bin\esptool.exe обновлена и перенесена в C:\Espressif\utils с именем esptool-ck.exe, в новой версии добавлен функционал
  прошивки плат с ESP8266, но пока есть проблемы с этим режимом, они будут устранены в следующих релизах.
  Пример прошивки утилитой:
  C:\Espressif\utils\esptool-ck.exe -cp COM2 -cd ck -cb 256000 -ca 0x00000 -cf 0x00000.bin -vvv
  C:\Espressif\utils\esptool-ck.exe -cp COM2 -cd ck -cb 256000 -ca 0x40000 -cf 0x40000.bin -vvv
  Краткое описание опций:
  -cp <device>          Выбор COM-порта
                        Для Windows по-умолчанию COM1
  -cd <board>           Выбор метода перезагрузки платы
			Доступны следующие варианты:
        none            Без манипуляций с сигналами DTR/RTS
        ck              сигнал RTS управляет RESET или CH_PD, сигнал DTR управляет GPIO0
        wifio           сигнал DTR управляет GPIO0 через PNP транзистор, а RESET через конденсатор
  -cb <baudrate>        Скорость COM-порта, по-умолчанию 115200
  -ca <address>         Адрес загрузки файла во flash-память
                        По-умолчанию 0x00000000
  -cf <filename>        Имя файла для загрузки во flash-память
  -v -vv -vvv		Уровень вывода отладочных сообщений

v1.0.6 (15.01.2015):
+ Добавлена документация, файл "docs\ESPTool.doc";
+ Добавлена консольная утилита для управления файлами в прошивке NodeMCU, (utils\nodemcutil.exe), для просмотра справки запустите: nodemcutil.exe -h
  Утилита позволяет:
  - закачать Lua скрипты в прошивку;
  - удалить Lua скрипты из прошивки;
  - просматривать список Lua скриптов в прошивке;
  - загружать Lua скрипты из прошивки на локальный компьютер;
  - запускать на выполнение в прошивке указанный Lua скрипт;
  - выполнять команду node.restart();
+ Добавлены утилиты для создания единого файла прошивки: utils\gen_appbin.exe, utils\gen_flashbin.exe, utils\genflashbinv6.exe
  Пример создания единого файла прошивки nodemcu:
  1. Соберите в Eclipse пример прошивки C:\Espressif\examples\nodemcu-firmware
  2. Отредактируйте в файле C:\Espressif\examples\nodemcu-firmware\bin\gen_misc_plus.bat параметр comport=COM2 и укажите номер своего COM-порта к которому подключена плата с ESP8266.
  3. Запустите файл C:\Espressif\examples\nodemcu-firmware\bin\gen_misc_plus.bat, в случае успешного создания единого файла прошивки запустится процесс заливки прошивки в ESP8266.
  4. Для записи init.lua в nodemcu, измените в файл C:\Espressif\examples\nodemcu-firmware\bin\load_init_lua.cmd параметр comport=COM2 и запустете файл load_init_lua.cmd
+ Добавлены новые примеры:
  nodemcu-spiffy - утилита для создания образа файловой системы spiffs, которая используется в NodeMCU для хранения lua скриптов во flash памяти (компилируется, проверен в работе), оригинальные исходники https://github.com/xlfe/spiffy
  esp8266_pcd8544 - драйвер и пример работы с LCD PCD8544 (Nokia 5110 & 3110 display) (компилируется, работа не проверялась), оригинальные исходники https://github.com/eadf/esp8266_pcd8544
* Изменен инсталлятор проекта;
* Обновлена утилита utils\esptool.exe:
  - добавлена поддержка установки конфигурации SPI Flash:
      опция --flash_freq (установить частоту SPI Flash, поддерживается 40m, 26m, 20m, 80m, по-умолчанию = 40m),
      опция --flash_mode (установить режим SPI Flash, поддерживается qio, qout, dio, dout, по-умолчанию = qio),
      опция --flash_size (установить размер SPI Flash, поддерживается 4m, 2m, 8m, 16m, 32m, по-умолчанию = 4m);
  - исправлены мелкие ошибки;
* Обновлены примеры:
  nodemcu-firmware - в Eclipse добавлена цель init для записи init.lua с помощью nodemcutil.exe (компилируется, проверен в работе), оригинальные исходники https://github.com/nodemcu/nodemcu-firmware;
  esphttpd;
  wifi-sta-tcp-client;

v1.0.5 (13.01.2015):
* Обновлен компилятор xtensa-lx106-gcc;
* Обновлены примеры:
  IOT_Demo - это полная версия оригинального IOT_Demo из SDK v0.9.4 (компилируется, работа не проверялась);
  IOT_Demo_MOD - урезаная версия IOT_Demo из SDK v0.9.4, из неё удалены библиотеки json, upgrade, lwip и ssl и используются стандартные из SDK (компилируется, работа не проверялась);
  i2c_bmp180 (компилируется, работа не проверялась), исходники https://github.com/CHERTS/esp8266-i2c_bmp180
  i2c_ina219 (компилируется, работа не проверялась);
  esphttpd, утилита mkespfsimage.exe теперь корректно работает под Windows (компилируется, проверен в работе);
* Обновлена утилита utils\esptool.exe:
  - добавлен режим чтения mac адреса для ap и sta (пример использования: C:\Espressif\utils\esptool.exe -p COM2 read_mac);
  - добавлено чтение flash id (пример использования: C:\Espressif\utils\esptool.exe -p COM2 flash_id);
  - добавлена опция --baud (-b) для указания скорости com-порта (пример использования: C:\Espressif\utils\esptool.exe -p COM2 -b 256000 write_flash 0x00000 firmware/0x00000.bin 0x40000 firmware/0x40000.bin);
  - исправлены мелкие ошибки;
+ Добавлены новые примеры:
  i2c_bh1750 (компилируется, работа не проверялась);
  nodemcu-firmware (компилируется, проверен в работе), исходники https://github.com/nodemcu/nodemcu-firmware;
  nodelua (компилируется, работа не проверялась, код очень запутан и много лишнего, вобщем мешанина), исходники https://github.com/haroldmars/nodelua;
  EspLightNode (компилируется, работа не проверялась), исходники https://github.com/Frans-Willem/EspLightNode;

v1.0.4 (25.12.2014):
* Обновлена SDK до версии 0.9.4;
* Обновлено большинство файлов Makefile во всех примерах;
* Обновлена документация, в частности файл "docs\ESP8266EX Pin Definitions.doc";
* Обновлены примеры:
  1wire_ds18b20 (компилируется, проверен в работе);
  dht22 (компилируется, проверен в работе);
  wifi-sta-tcp-client (компилируется, проверен в работе, но есть проблемы в библиотеке liblwip.a от espressif, рекомендую использовать в рабочих проектах нативный стек LwIP без espconn);
  i2c_24xx16 (компилируется, работа не проверялась);
  esphttpd (компилируется, проверен в работе);
+ Добавлена альтернативная версия библиотеки liblwip (liblwipmod.a) (применена серия патчей от pvvx), исходники https://github.com/CHERTS/esp8266-liblwip
+ Добавлено фото платы ESP-07 rev2, см.файл "docs\ESP-07 plate v2.png";
+ Добавлены новые примеры:
  at_v0.20_on_SDKv0.9.4 (компилируется, проверен в работе);
  i2c_24xx32 (компилируется, проверен в работе), исходники https://github.com/CHERTS/esp8266-i2c_24xx32
  dht11_22 (компилируется, проверен в работе), исходники https://github.com/CHERTS/esp8266-dht11_22
  i2c_bmp180 (компилируется, работа не проверялась);
  i2c_ina219 (компилируется, работа не проверялась);
  i2c_sht21 (компилируется, работа не проверялась);
  i2c_hd44780 (компилируется, работа не проверялась);
  lpd6803 (компилируется, работа не проверялась);
  esp_iot_rtos_sdk (компилируется, работа не проверялась);

v1.0.3 (12.12.2014):
+ Добавлена документация на ESP8266;
+ Добавлен пример прошивки: esphttpd;
* Исправлен пример: IoT_Demo;

v1.0.2:
+ Добавлены новые примеры: 1wire_ds18b20, dht22, blinky, blinky2, i2c_24xx16, i2c_htu21d, sysinfo;
* Обновлена библиотека libhal.a;

v1.0.1:
+ Добавлен пример прошивки at_v0.20_on_SDKv0.9.3;

v1.0.0:
- Первый релиз;
